package com.filip.smartlifesaver.model;


import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.filip.smartlifesaver.model.enums.ChestPainType;
import com.filip.smartlifesaver.model.enums.RestECG;
import com.filip.smartlifesaver.model.enums.SlopePeakExercise;
import com.filip.smartlifesaver.model.enums.Thal;
import lombok.Data;

@Data
@DynamoDBTable(tableName = "HeartData")
public class HeartData {


    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;


    /**
     * Referencing a thing where does this HeartData comes from.
     */
    @DynamoDBAttribute
    private String thingId;

    @DynamoDBAttribute
    private int age;

    @DynamoDBAttribute
    private boolean isMale;

    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    private ChestPainType chestPainType;

    /**
     * resting blood pressure (in mm Hg)
     */
    @DynamoDBAttribute
    private int testBPS;

    /**
     * serum cholestoral in mg/dl
     */
    @DynamoDBAttribute
    private int cholesterol;

    /**
     * (fasting blood sugar > 120 mg/dl) (1 = true; 0 = false)
     */
    @DynamoDBAttribute
    private boolean muchFBS;

    /**
     * restecg: resting electrocardiographic results
     -- Value 0: normal
     -- Value 1: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV)
     -- Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria
     */
    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    private RestECG restECG;

    /**
     * thalach: maximum heart rate achieved
     */
    @DynamoDBAttribute
    private int thalach;

    /**
     * exercise induced angina (1 = yes; 0 = no)
     */
    @DynamoDBAttribute
    private boolean exInducedAng;

    /**
     * ST depression induced by exercise relative to rest
     */
    @DynamoDBAttribute
    private float oldPeak;

    /**
     * slope: the slope of the peak exercise ST segment
     -- Value 1: upsloping
     -- Value 2: flatstr
     -- Value 3: downsloping
     */
    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    private SlopePeakExercise slopePeakExercise;

    /**
     * number of major vessels (0-3) colored by flourosopy
     */
    @DynamoDBAttribute
    private int majorVesselsCount;

    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    private Thal thal;

    /**
     * This value is predicted
     *  diagnosis of heart disease (angiographic disease status)
     -- Value 0: < 50% diameter narrowing
     -- Value 1: > 50% diameter narrowing
     */
    @DynamoDBAttribute
    private int diagnosisOfHeartDisease;


    public HeartData() {

    }

    @Override
    public String toString() {
        return "HeartData{" +
                "id='" + id + '\'' +
                ", thingId='" + thingId + '\'' +
                ", age=" + age +
                ", isMale=" + isMale +
                ", chestPainType=" + chestPainType +
                ", testBPS=" + testBPS +
                ", cholesterol=" + cholesterol +
                ", muchFBS=" + muchFBS +
                ", restECG=" + restECG +
                ", thalach=" + thalach +
                ", exInducedAng=" + exInducedAng +
                ", oldPeak=" + oldPeak +
                ", slopePeakExercise=" + slopePeakExercise +
                ", majorVesselsCount=" + majorVesselsCount +
                ", thal=" + thal +
                ", diagnosisOfHeartDisease=" + diagnosisOfHeartDisease +
                '}';
    }
}
